{
  "name": "isf",
  "version": "0.1.10",
  "author": {
    "name": "Sabin Marcu",
    "email": "sabinmarcu@gmail.com"
  },
  "dependencies": {
    "stitchw": ">=0.3.4",
    "coffee-script": ">=1.2.0",
    "express": ">=2.5.0",
    "commander": "*",
    "codo": "*",
    "async": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "uglify-js": "*"
  },
  "scripts": {
    "test": "npm run-script compile && npm run-script run-tests",
    "compile": "npm run-script compile-sources && npm run-script minify-sources",
    "compile-sources": "node ./server.js --compile lib/isf.js",
    "minify-sources": "node ./node_modules/.bin/uglifyjs lib/isf.js -o lib/isf.min.js",
    "run-tests": "node ./node_modules/.bin/mocha --compilers coffee:coffee-script ./spec/*",
    "run_docs": "./node_modules/.bin/codo --title 'ISF Documentation' -o docs",
    "start": "node server.js"
  },
  "main": "lib/isf.min.js",
  "readme": "# IS Framework [![BUILD STATUS](https://secure.travis-ci.org/sabinmarcu/IS.png)](http://travis-ci.org/sabinmarcu/IS) \nThe pourpose of this framework is to make object handling and mixins much more easier to work with in CoffeeScript / JavaScript\n\nThe whole application is wrapped in a Node.JS application that handles specs, browser testing, compiling with Stitch, and a few others.\n\n## Documentation\nIf you want to see the documentation, you can head over to [GitHub's pages](http://sabinmarcu.github.com/IS) and look through. You can try and connect the code to the documentation, after all, it's generated from the source code itself\n\n## The Node.JS application\nHas a command.js wrapper, so it is very easy to use.\n\n\tcoffee boot\n\tcoffee boot -s localhost -p 9323\n\tcoffee boot -c ../project/src/IS.js\n\tcoffee boot -c ../project/src/IS.js -w 0.5\n\nAnd so forth.\n\nThe first one sets up an http server on preset variables that compiles the project and feeds the `application.js` for you to handle in the console window of the browser (browser testing)\n\nThe second one sets up a server on `localhost:9323`, just like the previous one (except different variables)\n\nThe third one compiles the framework to the file hinted in the argument.\n\nThe forth one adds a watch (basically, a timer function), so that every `0.5 seconds` it compiles the code to the path specified.\n\n## The framework \n\n# @TODO\n",
  "readmeFilename": "README.md",
  "_id": "isf@0.1.10",
  "description": "The pourpose of this framework is to make object handling and mixins much more easier to work with in CoffeeScript / JavaScript",
  "_from": "isf@*"
}
